@use 'sass:map';
@use '@angular/material' as mat;

@mixin footer-public-theme($theme) {
  $color-config: mat.get-color-config($theme);
  $accent: map.get($color-config, 'accent');
  $background: map.get($color-config, 'background');
  $foreground: map.get($color-config, 'foreground');
  $primary: map.get($color-config, 'primary');
  $warn: map.get($color-config, 'warn');

  .footer {

    background-image: url(/assets/images/bg_noise_low.png);

    .overlay {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(0, 0, 0, 0.7);
      visibility: hidden;
      opacity: 0;
      z-index: 99999;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .overlayShow{
      visibility: visible;
      opacity: 1;
    }

    .popup {
      margin: 70px auto;
      background: #fff;
      border-radius: 5px;
      width: 350px;
      position: relative;
      z-index: 99999;
      padding: 2rem;

      .checkIcon{
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: #82ce34;
      }
    }
    .popup .close {
      position: absolute;
      top: 20px;
      right: 30px;
      font-size: 30px;
      font-weight: bold;
      text-decoration: none;
      color: #333;
    }
    .popup .close:hover {
      color: #F2BF00;
    }
    .popup .content {
      max-height: 30%;
      overflow: auto;
    }

    .social{
      svg-icon{
        cursor: pointer;
      }
    }
    overflow: visible;
    padding: 24px 30px;
    background:url('../../../assets/images/bg-footer.png');
    background-size: 100% 100%;

    ::placeholder {
      color: mat.get-color-from-palette($primary, 'main-contrast');
    }

    input, select, textarea, p {
      color: mat.get-color-from-palette($primary, 'main-contrast');
    }


    .buttonCustom {
      span {
        color: $deep-green;
      }
    }

    span, p, a {
      color: mat.get-color-from-palette($primary, 'main-contrast');
    }

    a {
      display: block;
      text-decoration: none;
      margin-bottom: 7px;
    }

    .accordion-body {
      background-color: $footer-public;
      text-align: left;
      padding: 7px 0px;
    }

    .accordion-item {
      border: none;
      border-top: 1px solid white;
      border-radius: 0px;
    }

    .accordion-button {
      padding: 5px 0px;
      box-shadow: none;
      border-radius: 0px;
      background-color: $footer-public;
    }

    .accordion-button:after {
      background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23ffffff'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>") !important;
    }

    mat-divider {
      border-top-color: mat.get-color-from-palette($primary, 'main-contrast');
    }
  }
}
